<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
	
	<flow name="generateCSVReportForConnectors" doc:id="1a3b0780-7a62-43e0-b181-eb18abd7901f" >
	<try doc:name="Try" doc:id="dd7fc3b6-13b0-4916-a729-356b1545828a" >
				<set-variable value="#[p('anypointplatform.exchangebasepath') ++ (payload.&quot;groupId&quot;) ++ &quot;/&quot; ++ (payload.&quot;artifactId&quot;) ++ &quot;/&quot; ++ (payload.&quot;version&quot;) ++ &quot;/asset&quot;]" doc:name="Set exchangeURI Variable" doc:id="105fb4d7-0cab-4f66-8d6b-6123dffecbc3" variableName="exchangeURI"/>
				<flow-ref doc:name="Invoke ExchangeURI" doc:id="96af77ea-4d10-4dea-8f4f-89181020f68e" name="invokeExchangeAPI" target="currentVersionExchangeResponse"/>
			<ee:transform doc:name="Transform Message" doc:id="a1f46551-1d13-46b2-bb47-df8642684e39" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="analyzeConnectorVersion" ><![CDATA[%dw 2.0
import * from dw::core::Strings
import convVersionStrToNum,convVersionNumToStr from commonUtils::functions
output application/java
var currentVersionExchangeResponse = vars.currentVersionExchangeResponse
fun checkIfCurrentVersionIstheLatest(currentVersion:String,maxOfOtherVersions:Number): Boolean = (
    convVersionStrToNum(currentVersion) >= maxOfOtherVersions
    )
var otherVersionsOfTheConnector = currentVersionExchangeResponse.versions map ((item, index) -> convVersionStrToNum(item replace /[^0-9.]/ with ""))
var currentVersionOfTheConnector = currentVersionExchangeResponse.version
var maxVersionOfTheConnector = max(otherVersionsOfTheConnector) as Number
---
{
//maxInVersionsTag: maxVersionOfTheConnector,
maxVersionOfTheConnector: convVersionNumToStr(maxVersionOfTheConnector),
currentVersionOfTheConnector: currentVersionOfTheConnector,
isCurrentVersionTheLatest:checkIfCurrentVersionIstheLatest(currentVersionOfTheConnector,maxVersionOfTheConnector)
}]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<choice doc:name="Choice" doc:id="32a8a069-1ddb-4e78-8b35-5aeb1bd5ab3a" >
				<when expression="#[vars.analyzeConnectorVersion.isCurrentVersionTheLatest]">
					<ee:transform doc:name="Transform Message" doc:id="f15a0f7e-3e48-4830-8c72-be840af5cdf6">
				<ee:message>
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="applicationReport"><![CDATA[%dw 2.0
output application/java
import returnJComparablity from commonUtils::functions
var currentVersionExchangeResponse = vars.currentVersionExchangeResponse
---
vars.applicationReport +
{
	ApplicationName:payload.ApplicationName,
	AppID: payload.AppID,
	DeploymentType: payload.DeploymentType,
	ApplicationStatus: payload.ApplicationStatus,
    groupId: payload.groupId,
    artifactId: payload.artifactId,
    currentVersion: payload.version,
    //"java-17-supported-current" : (vars.currentVersionExchangeResponse.attributes filter ((item, index) -> item.key contains "is-java-17-supported")).value[0] default "NA",
	//"java-8-supported-current" : (vars.currentVersionExchangeResponse.attributes filter ((item, index) -> item.key contains "is-java-8-supported")).value[0] default "NA",
	//"java-11-supported-current" : (vars.currentVersionExchangeResponse.attributes filter ((item, index) -> item.key contains "is-java-11-supported")).value[0] default "NA",
    "java-17-supported-current":returnJComparablity(currentVersionExchangeResponse,"is-java-17-supported"),
    "java-8-supported-current":returnJComparablity(currentVersionExchangeResponse,"is-java-8-supported"),
    "java-11-supported-current":returnJComparablity(currentVersionExchangeResponse,"is-java-11-supported"),
    latestVersion: payload.version,
    "java-17-supported-latest": "Current Version Latest",
    "java-8-supported-latest": "Current Version Latest",
    "java-11-supported-latest": "Current Version Latest"  
}]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
				</when>
				<otherwise>
					<set-variable value="#[p('anypointplatform.exchangebasepath') ++ (payload.&quot;groupId&quot;) ++ &quot;/&quot; ++ (payload.&quot;artifactId&quot;) ++ &quot;/&quot; ++ (vars.analyzeConnectorVersion.maxVersionOfTheConnector) ++ &quot;/asset&quot;]" doc:name="Set exchangeURI Variable" doc:id="f5fac51b-976b-4e19-b929-16ce18fa5d6d" variableName="exchangeURI"/>
					<flow-ref doc:name="Invoke ExchangeURI" doc:id="ea393f6d-43f8-42d4-b8f3-a5712970caeb" name="invokeExchangeAPI" target="latestVersionExchangeResponse" />
					<ee:transform doc:name="Transform Message" doc:id="3e7b465e-b901-4c4e-9c0d-1f6f3ff17db4">
						<ee:message>
						</ee:message>
						<ee:variables>
							<ee:set-variable variableName="applicationReport"><![CDATA[%dw 2.0
output application/java
import returnJComparablity from commonUtils::functions
var currentVersionExchangeResponse = vars.currentVersionExchangeResponse
var latestVersionExchangeResponse = vars.latestVersionExchangeResponse
---
vars.applicationReport +
{
	ApplicationName:payload.ApplicationName,
	AppID: payload.AppID,
	DeploymentType: payload.DeploymentType,
	ApplicationStatus: payload.ApplicationStatus,
    groupId: payload.groupId,
    artifactId: payload.artifactId,
    currentVersion: payload.version,
    "java-17-supported-current":returnJComparablity(currentVersionExchangeResponse,"is-java-17-supported"),
    "java-8-supported-current":returnJComparablity(currentVersionExchangeResponse,"is-java-8-supported"),
    "java-11-supported-current":returnJComparablity(currentVersionExchangeResponse,"is-java-11-supported"),
    latestVersion: latestVersionExchangeResponse.version,
//    "java-17-supported-latest": (latestVersionExchangeResponse.attributes filter ((item, index) -> item.key contains "is-java-17-supported")).value[0] default "false",
//    "java-8-supported-latest": (latestVersionExchangeResponse.attributes filter ((item, index) -> item.key contains "is-java-8-supported")).value[0] default "false",
//    "java-11-supported-latest": (latestVersionExchangeResponse.attributes filter ((item, index) -> item.key contains "is-java-11-supported")).value[0] default "false"
    "java-17-supported-latest": returnJComparablity(latestVersionExchangeResponse,"is-java-17-supported"),
    "java-8-supported-latest": returnJComparablity(latestVersionExchangeResponse,"is-java-8-supported"),
    "java-11-supported-latest": returnJComparablity(latestVersionExchangeResponse,"is-java-11-supported")
}]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
				</otherwise>
			</choice>
				<error-handler >
					<on-error-continue enableNotifications="false" logException="false" doc:name="Either Asset is not Found or Not Available in the Org" doc:id="fcb766a6-0ac4-42ca-bae2-1aee54ae4a57">
						<logger level="DEBUG" doc:name="Logger" doc:id="88afd09e-33c4-48f4-af65-0a65ebef56f0" message='#["Asset " ++ payload."groupId" ++ "/" ++ payload."artifactId" ++ "/" ++ payload."version" ++ " not found in Anypoint Exchange"]'/>
						<ee:transform doc:name="Transform Message" doc:id="d4a18a10-817f-4645-80a3-ec5f8b9eb31d" >
							<ee:message >
							</ee:message>
							<ee:variables >
								<ee:set-variable variableName="applicationReport" ><![CDATA[%dw 2.0
output application/java
---
vars.applicationReport +
{
	ApplicationName:payload.ApplicationName,
	AppID: payload.AppID,
	DeploymentType: payload.DeploymentType,
	ApplicationStatus: payload.ApplicationStatus,
    groupId: payload.groupId,
    artifactId: payload.artifactId,
    version: payload.version,
    "java-17-supported" : "NA-Exchange",
    "java-8-supported" : "NA-Exchange",
    "java-11-supported" : "NA-Exchange",
    latestVersion: "NA-Exchange",
    "java-17-supported-latest": "NA-Exchange",
    "java-8-supported-latest": "NA-Exchange",
    "java-11-supported-latest": "NA-Exchange"
    
}]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
					</on-error-continue>
				</error-handler>
			</try>
	</flow>
	<sub-flow name="invokeExchangeAPI" doc:id="4f26bde1-4c86-40d0-9dc0-6a9864c32357" >
		<logger level="TRACE" doc:name="Logger" doc:id="2af9613e-fc47-4941-b3e1-6e03bd82648f" message="Checking - #[vars.exchangeURI] in Cache"/>
		<ee:cache doc:name="Cache" doc:id="b615e576-8521-4d82-ab1a-f8f69b401e65" cachingStrategy-ref="Caching_Strategy">
			<logger level="INFO" doc:name="Logger" doc:id="704a351e-7e07-4f74-9fb7-334aeeab6ccf" message=" #[vars.exchangeURI] not available in Cache - Executing Exchange API"/>
			<http:request method="GET" doc:name="Request" doc:id="3a2884d7-3614-4184-a3b3-ec829fcec3bc" config-ref="AnypointPlatform_HTTP_Request_configuration" path="#[vars.exchangeURI]" />
		</ee:cache>
	</sub-flow>
	</mule>
