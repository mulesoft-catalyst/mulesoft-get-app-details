<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
	
	<flow name="getAllEnvDetailsObjectStore" doc:id="0edd0321-5f25-4d0f-a45d-5d99cc7c4913" >
		<!-- <flow-ref doc:name="Get Details for Each of the Environments" doc:id="1a1d50e0-dbac-4f6b-9902-50d1d749f61f" name="getAllEnvDetails"/> -->
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;{}]" doc:name="Set Variable" doc:id="71f6d987-e4d7-4ff9-b534-6a9b6a04229e" variableName="envDetails"/>
		<foreach doc:name="For Each Environment" doc:id="2f63deba-9adf-4f37-8d86-d3e8b3fc3361" collection="#[vars.environments]">
			<os:retrieve doc:name="Get Environment For that Org" doc:id="ab489207-6ec8-4fb3-94d4-909ee1d457c0" key="#[payload]" objectStore="Env" target="environmentValue"/>
			<logger level="DEBUG" doc:name="Logger" doc:id="49dc0173-45c2-46c0-9a5e-6b7efb00bf7a" message="#[vars.environmentValue]" />
			<ee:transform doc:name="Transform Message" doc:id="3334b1a7-9b78-4e7f-807e-3216e7603631" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="envDetails" ><![CDATA[%dw 2.0
output application/java
---
vars.envDetails default {} ++ {
	(payload): vars.environmentValue
}]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</foreach>
		<logger level="INFO" doc:name="Logger" doc:id="5209d4ca-4d8e-4943-849a-fb66a2eb7aae" message="#[vars.envDetails]"/>
		<ee:transform doc:name="Transform Message" doc:id="d66401c0-82ec-4f40-8c74-4415b361cbd9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
fun returnStatus(total : Number, success : Number, failure : Number, nameOfTheEnvironment: String) : String =
(
    if(total == 0)
    nameOfTheEnvironment ++ " - No Applications to be processed"
    else if(total == (success + failure))
    nameOfTheEnvironment ++ " - Completed " ++ (success + failure) ++ " of " ++ total
    else
    nameOfTheEnvironment ++ " - Processing " ++ (success + failure) ++ " of " ++ total
)
var envDetails = vars.envDetails
output application/json
---
{
    "StandAloneHybStatus": envDetails mapObject (
    (value, key, index) -> 
    (key as String) : returnStatus(
        value.totalMule4StandAloneHybApps,
        value.succPrcdMule4StandAloneHybApps,
        value.failPrcdMule4StandAloneHybApps,
        value.nameOfTheEnvironment
    )
),
"CH1Status": envDetails mapObject (
    (value, key, index) -> 
    (key as String) : returnStatus(
        value.totalMule4CH1Apps,
        value.succPrcdMule4CH1Apps,
        value.failPrcdMule4CH1Apps,
        value.nameOfTheEnvironment
    )
),
"CH2Status": envDetails mapObject (
    (value, key, index) -> 
    (key as String) : returnStatus(
        value.totalMule4CH2Apps,
        value.succPrcdMule4CH2Apps,
        value.failPrcdMule4CH2Apps,
        value.nameOfTheEnvironment
    )
),
"RTFStatus": envDetails mapObject (
    (value, key, index) -> 
    (key as String) : returnStatus(
        value.totalMule4RTFApps,
        value.succPrcdMule4RTFApps,
        value.failPrcdMule4RTFApps,
        value.nameOfTheEnvironment
    )
)
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="false" doc:name="On Error Propagate" doc:id="678752e0-30fc-4410-99c2-3d793496dbd3" type="OS:KEY_NOT_FOUND">
				<ee:transform doc:name="Transform Message" doc:id="268753fc-5e74-4265-801a-8fe58eda5a31">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
Response : "Organization: " ++ vars.orgID as String ++ "available in the Object Store. But environment details missing. Delete and Recreate the report"
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="getOrgDetailsFrmObjectStore" doc:id="30e96709-ad06-4349-b080-a6ed9b95ee93" >
		<os:retrieve doc:name="Get Environments for that OrgID" doc:id="33440474-0a20-495a-9ec3-8614b726ea0f" key="#[vars.orgID]" objectStore="Org" target="environments" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="false" doc:name="On Error Propagate" doc:id="ced3bb8d-0cd9-4712-b73d-2ce4689ee318" type="OS:KEY_NOT_FOUND">
				<ee:transform doc:name="Transform Message" doc:id="fbb90a9d-041e-45b7-85cd-8719113dfb58">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
Response : "Organization: " ++ vars.orgID as String ++ " not available in the Object Store"
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="storeOrgStatusInObjectStore" doc:id="aac7b0e6-fc0a-4720-bac7-feaa2c33c953" >
		<flow-ref doc:name="Store Org" doc:id="607bef11-cf8c-4ec0-9d50-b18d597a5ed8" name="storeOrg"/>
		<flow-ref doc:name="Store Env" doc:id="60a974b5-2e6f-4525-9ace-b18b1f55bae4" name="storeEnv"/>
	</flow>
	<flow name="storeOrg" doc:id="526d8e98-19e0-4025-882d-508361201264" >
		<os:store doc:name="Store Environment in the Org" doc:id="b3ed3edc-0cbe-4218-b250-e1a443350ef2" key="#[vars.orgID]" objectStore="Org">
			<os:value ><![CDATA[#[vars.environments]]]></os:value>
		</os:store>
	</flow>
	<flow name="storeEnv" doc:id="28af9a8c-9c26-47d6-9f7f-aa88da9ae9f3" >
		<ee:transform doc:name="Create Array of Environment Status Variable" doc:id="f3abba47-ecd9-40bf-a9e2-66ec0f740bec" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="allEnvStatus" ><![CDATA[%dw 2.0
output application/java
var orgStatus = vars.orgStatus
var removeOrgIDVar = namesOf(orgStatus) filter ((item, index) -> (item == "orgID"))
---
orgStatus -- removeOrgIDVar as Array]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each Environment" doc:id="418b1432-fbd8-466e-85fb-7304d155012c" collection="#[vars.allEnvStatus]">
			<os:store doc:name="Store Environment Status" doc:id="d2393fb8-856e-4e52-9dd4-cce5863d7b97" objectStore="Env" key="#[namesOf(payload)[0]]">
				<os:value ><![CDATA[#[payload[0]]]]></os:value>
			</os:store>
		</foreach>
	</flow>
	<flow name="removeOrgAndEnvironmentDetails" doc:id="914a8e5b-d8f0-4f7d-acaf-daa2bd047336" >
		<flow-ref doc:name="Get All Environments for that Org" doc:id="2f3bffb3-ed83-43be-857b-e1c20dc1f0d2" name="getOrgDetailsFrmObjectStore"/>
		<flow-ref doc:name="Remove Environments From That Org" doc:id="68e79d24-79cb-4f8d-901a-85306175a4f8" name="removeEnvironmentsForThatOrg"/>
		<flow-ref doc:name="Remove Organization" doc:id="fd0dd7c6-5486-42cc-b036-0b20e1db361a" name="removeOrganization"/>
	</flow>
	<flow name="removeEnvironmentsForThatOrg" doc:id="5da5675b-d4f0-41c1-9ed7-13b273de67c1" >
		<foreach doc:name="For Each" doc:id="94017799-e7e4-477e-bfff-6a8d363849c4" collection="#[vars.environments]">
			<logger level="DEBUG" doc:name="Logger" doc:id="59e8b8ef-718c-401b-af87-188a6a0c2ddf" message="Removing #[payload] from Org #[vars.OrgID]"/>
			<os:retrieve doc:name="Get Environment" doc:id="818c924f-788d-40fd-bea4-72253c079b5c" key="#[payload]" objectStore="Env" target="nameOfTheEnvironment" targetValue="#[payload.nameOfTheEnvironment]"/>
			<ee:transform doc:name="Set FilePath to be Deleted" doc:id="a5ad906a-14e7-4aa4-a9fd-bcdea22af67a" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="envFilePath" ><![CDATA[%dw 2.0
output application/java
---
p('filePathOnDisk.outputOrgDirectory') ++ (vars.orgID as String) ++ p('filePathOnDisk.separator') ++ vars.nameOfTheEnvironment ++ p('filePathOnDisk.outputCSVFileExtension')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<try doc:name="Try" doc:id="7501f11e-b038-4b08-b8dd-76aec1f7e1ad" >
				<file:delete doc:name="Delete Env File" doc:id="20299fa7-61b9-45c1-b75c-b3b6a8f669cd" config-ref="File_Config" path="#[vars.envFilePath]"/>
				<error-handler >
					<on-error-continue enableNotifications="false" logException="false" doc:name="On Error Continue" doc:id="39ded8db-0b57-471e-8cfd-828903ea9530" type="FILE:ILLEGAL_PATH">
						<logger level="ERROR" doc:name="Logger" doc:id="6b7cdccf-3006-4b7a-8452-e8dbc73a0202" message='#["File for environment-" ++ vars.envFilePath ++ " does not exist. Could not be deleted"]'/>
					</on-error-continue>
				</error-handler>
			</try>
			<os:remove doc:name="Remove Environment" doc:id="298c2b28-605e-417f-9e96-07e262e710ea" key="#[payload]" objectStore="Env"/>
		</foreach>
	</flow>
	<flow name="removeOrganization" doc:id="6df0bc48-e6c2-4a6a-9e18-903450a57cf5" >
		<logger level="INFO" doc:name="Logger" doc:id="b8120e8b-4f31-420a-8495-1566f216f9ed" message="Removing Org #[vars.OrgID] from Object Store"/>
		<os:remove doc:name="Remove Organization" doc:id="615f245f-8e88-4771-a42f-9dd0b42263ac" key="#[vars.OrgID]" objectStore="Org"/>
		<file:delete doc:name="Delete" doc:id="538e11a2-1b28-479b-9c8f-0f3561b3958f" config-ref="File_Config" path="#[p('filePathOnDisk.outputOrgDirectory') ++ (vars.orgID as String) ++ p('filePathOnDisk.separator') ++ vars.OrgID ++ &quot;.zip&quot;]"/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="16126ec5-877f-4d4d-88ad-364ea9267cef" type="FILE:ILLEGAL_PATH">
				<logger level="ERROR" doc:name="Logger" doc:id="c291049a-380d-4ce1-93db-0543c55a8474" message='#["File for Org " ++ vars.orgID ++ " does not exist. Could not be deleted"]'/>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="updateObjectStore" doc:id="7fafbeae-a020-488e-a8a6-36f87260e2d4" maxConcurrency="1">
		<vm:listener doc:name="Listener" doc:id="9caff4b5-2ef3-44ab-86b7-dce4f0e4b777" config-ref="VM_Config" numberOfConsumers="1" queueName="updateObjectStore"/>
		<os:retrieve doc:name="Retrieve Env from Object Store" doc:id="146d71fc-830a-4d7d-9bd3-de3d0c9d1c64" key="#[payload.env]" objectStore="Env" target="envOSResponse"/>
		<ee:transform doc:name="Prepare Updated Value" doc:id="ec1c4155-00bf-43fb-9cf5-e7ea91e17905" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="updatedEnvPayload" ><![CDATA[%dw 2.0
output application/java
var envOSResponse = vars.envOSResponse
var ch1ok = if(payload.depType == "CH1" and payload.status == "OK") 1 else 0
var ch1fail = if(payload.depType == "CH1" and payload.status == "FAIL") 1 else 0
var ch2ok = if(payload.depType == "CH2" and payload.status == "OK") 1 else 0
var ch2fail = if(payload.depType == "CH2" and payload.status == "FAIL") 1 else 0
var rtfok = if(payload.depType == "RTF" and payload.status == "OK") 1 else 0
var rtffail = if(payload.depType == "RTF" and payload.status == "FAIL") 1 else 0
var hybok = if(payload.depType == "HYB" and payload.status == "OK") 1 else 0
var hybfail = if(payload.depType == "HYB" and payload.status == "FAIL") 1 else 0
---
{
	nameOfTheEnvironment: envOSResponse.nameOfTheEnvironment,
	totalApplications : envOSResponse.totalApplications,
	totalMule4StandAloneHybApps: envOSResponse.totalMule4StandAloneHybApps,
	succPrcdMule4StandAloneHybApps: envOSResponse.succPrcdMule4StandAloneHybApps + hybok,
	failPrcdMule4StandAloneHybApps: envOSResponse.failPrcdMule4StandAloneHybApps + hybfail,
	totalMule4CH1Apps: envOSResponse.totalMule4CH1Apps,
	succPrcdMule4CH1Apps: envOSResponse.succPrcdMule4CH1Apps + ch1ok,
	failPrcdMule4CH1Apps: envOSResponse.failPrcdMule4CH1Apps + ch1fail,
	totalMule4CH2Apps: envOSResponse.totalMule4CH2Apps,
	succPrcdMule4CH2Apps: envOSResponse.succPrcdMule4CH2Apps + ch2ok,
	failPrcdMule4CH2Apps: envOSResponse.failPrcdMule4CH2Apps + ch2fail,
	totalMule4RTFApps: envOSResponse.totalMule4RTFApps,
	succPrcdMule4RTFApps: envOSResponse.succPrcdMule4RTFApps + rtfok,
	failPrcdMule4RTFApps:envOSResponse.failPrcdMule4RTFApps + rtffail
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<os:store doc:name="Store Env with Updated Value" doc:id="7b691203-33da-41a5-b44f-28a0ba6c9b41" key='#[payload.env]' objectStore="Env">
			<os:value ><![CDATA[#[vars.updatedEnvPayload]]]></os:value>
		</os:store>
	</flow>
	</mule>
